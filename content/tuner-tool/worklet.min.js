"use strict";function e({binsPerSecond:e,onBinAvailable:t}){const s=sampleRate/e;let n=0,a=0;return e=>{++a>=s&&(t(n),n=0,a=0),n=Math.max(n,Math.abs(e))}}class t extends AudioWorkletProcessor{#e;#t=!1;constructor(e){super(),this.#e=e(this.port),this.port.start(),this.port.addEventListener("message",(e=>{if("enable"===e.data.kind)this.isEnabled=e.data.value}))}process(e,t,s){if(!this.isEnabled||1!==e.length||1!==e[0].length)return!0;const n=e[0][0],{length:a}=n;let r,i;for(r of this.#e)for(i=0;i<a;++i)r(n[i]);return!0}static create(e){return class extends t{constructor(){super(e)}}}}function s({fMin:e,fMax:t,windowSize:s,windowOffset:n,threshold:a,onPitchAvailable:r}){const i=Math.trunc(sampleRate/t),o=Math.trunc(sampleRate/e),l=new Float32Array(s+n),c=new Float32Array(o),d=new Float32Array(o);let f=0;return e=>{if(l[f]=e,++f>=s+n){l.copyWithin(0,n),f=s,console.time("yin");const e=(()=>{let e,t,n,r,f=0;for(e=1;e<o;++e)for(c[e]=0,t=s-e,n=0;n<t;++n)r=l[n]-l[n+e],c[e]+=r*r;for(n=1;n<o;++n)f+=c[n],d[n]=c[n]*n/f;for(d[0]=1,e=i;e<o;++e)if(d[e]<a){for(;e+1<o&&d[e+1]<d[e];)++e;return sampleRate/e}return 0})();console.timeEnd("yin"),e>0&&r(e)}}}registerProcessor("listener",t.create((t=>[s({fMin:50,fMax:2500,windowSize:2048,windowOffset:512,threshold:.3,onPitchAvailable(e){t.postMessage({kind:"pitch",value:e})}}),e({binsPerSecond:16,onBinAvailable(e){t.postMessage({kind:"bin",value:e})}})])));
