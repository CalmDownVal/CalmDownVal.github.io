"use strict";function e({binsPerSecond:e,onBinAvailable:t}){const s=sampleRate/e;let a=0,r=0;return e=>{++r>=s&&(t(a),a=0,r=0),a=Math.max(a,Math.abs(e))}}class t extends AudioWorkletProcessor{#e;#t=!1;constructor(e){super(),this.#e=e(this.port),this.port.start(),this.port.addEventListener("message",(e=>{if("enable"===e.data.kind)this.isEnabled=e.data.value}))}process(e,t,s){if(!this.isEnabled||1!==e.length||1!==e[0].length)return!0;const a=e[0][0],{length:r}=a;let n,i;for(n of this.#e)for(i=0;i<r;++i)n(a[i]);return!0}static create(e){return class extends t{constructor(){super(e)}}}}function s({fMin:e,fMax:t,windowSize:s,windowOffset:a,threshold:r,onPitchAvailable:n}){const i=Math.trunc(sampleRate/t),o=Math.trunc(sampleRate/e),l=new Float32Array(s+a),c=new Float32Array(o),f=new Float32Array(o);let h=0;return e=>{if(l[h]=e,++h>=s+a){l.copyWithin(0,a),h=s;const e=(()=>{let e,t,a,n,h=0;for(e=1;e<o;++e)for(c[e]=0,t=s-e,a=0;a<t;++a)n=l[a]-l[a+e],c[e]+=n*n;for(a=1;a<o;++a)h+=c[a],f[a]=c[a]*a/h;for(f[0]=1,e=i;e<o;++e)if(f[e]<r){for(;e+1<o&&f[e+1]<f[e];)++e;return sampleRate/e}return 0})();e>0&&n(e)}}}registerProcessor("listener",t.create((t=>[s({fMin:50,fMax:2500,windowSize:2048,windowOffset:512,threshold:.3,onPitchAvailable(e){t.postMessage({kind:"pitch",value:e})}}),e({binsPerSecond:16,onBinAvailable(e){t.postMessage({kind:"bin",value:e})}})])));
