"use strict";function t({binsPerSecond:t,onBinAvailable:r}){const s=sampleRate/t;let e=0,i=0;return t=>{++i>=s&&(r(e),e=0,i=0),e=Math.max(e,Math.abs(t))}}class r extends AudioWorkletProcessor{#t;#r=!1;constructor(t){super(),this.#t=t(this.port),this.port.start(),this.port.addEventListener("message",(t=>{if("enable"===t.data.kind)this.isEnabled=t.data.value}))}process(t,r,s){if(!this.isEnabled||1!==t.length||1!==t[0].length)return!0;const e=t[0][0],{length:i}=e;let o,n;for(o of this.#t)for(n=0;n<i;++n)o(e[n]);return!0}static create(t){return class extends r{constructor(){super(t)}}}}function s(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function e(t){if(this.size=0|t,this.size<=1||0!=(this.size&this.size-1))throw new Error("FFT size must be a power of two and bigger than 1");this._csize=t<<1;for(var r=new Array(2*this.size),s=0;s<r.length;s+=2){const t=Math.PI*s/this.size;r[s]=Math.cos(t),r[s+1]=-Math.sin(t)}this.table=r;for(var e=0,i=1;this.size>i;i<<=1)e++;this._width=e%2==0?e-1:e,this._bitrev=new Array(1<<this._width);for(var o=0;o<this._bitrev.length;o++){this._bitrev[o]=0;for(var n=0;n<this._width;n+=2){var a=this._width-n-2;this._bitrev[o]|=(o>>>n&3)<<a}}this._out=null,this._data=null,this._inv=0}var i=e;e.prototype.fromComplexArray=function(t,r){for(var s=r||new Array(t.length>>>1),e=0;e<t.length;e+=2)s[e>>>1]=t[e];return s},e.prototype.createComplexArray=function(){const t=new Array(this._csize);for(var r=0;r<t.length;r++)t[r]=0;return t},e.prototype.toComplexArray=function(t,r){for(var s=r||this.createComplexArray(),e=0;e<s.length;e+=2)s[e]=t[e>>>1],s[e+1]=0;return s},e.prototype.completeSpectrum=function(t){for(var r=this._csize,s=r>>>1,e=2;e<s;e+=2)t[r-e]=t[e],t[r-e+1]=-t[e+1]},e.prototype.transform=function(t,r){if(t===r)throw new Error("Input and output buffers must be different");this._out=t,this._data=r,this._inv=0,this._transform4(),this._out=null,this._data=null},e.prototype.realTransform=function(t,r){if(t===r)throw new Error("Input and output buffers must be different");this._out=t,this._data=r,this._inv=0,this._realTransform4(),this._out=null,this._data=null},e.prototype.inverseTransform=function(t,r){if(t===r)throw new Error("Input and output buffers must be different");this._out=t,this._data=r,this._inv=1,this._transform4();for(var s=0;s<t.length;s++)t[s]/=this.size;this._out=null,this._data=null},e.prototype._transform4=function(){var t,r,s=this._out,e=this._csize,i=1<<this._width,o=e/i<<1,n=this._bitrev;if(4===o)for(t=0,r=0;t<e;t+=o,r++){const s=n[r];this._singleTransform2(t,s,i)}else for(t=0,r=0;t<e;t+=o,r++){const s=n[r];this._singleTransform4(t,s,i)}var a=this._inv?-1:1,h=this.table;for(i>>=2;i>=2;i>>=2){var l=(o=e/i<<1)>>>2;for(t=0;t<e;t+=o)for(var f=t+l,u=t,c=0;u<f;u+=2,c+=i){const t=u,r=t+l,e=r+l,i=e+l,o=s[t],n=s[t+1],f=s[r],_=s[r+1],p=s[e],d=s[e+1],v=s[i],m=s[i+1],b=o,w=n,y=h[c],g=a*h[c+1],z=f*y-_*g,A=f*g+_*y,M=h[2*c],T=a*h[2*c+1],x=p*M-d*T,E=p*T+d*M,P=h[3*c],R=a*h[3*c+1],k=v*P-m*R,F=v*R+m*P,S=b+x,C=w+E,I=b-x,O=w-E,B=z+k,W=A+F,j=a*(z-k),L=a*(A-F),q=S+B,D=C+W,G=S-B,H=C-W,J=I+L,K=O-j,N=I-L,Q=O+j;s[t]=q,s[t+1]=D,s[r]=J,s[r+1]=K,s[e]=G,s[e+1]=H,s[i]=N,s[i+1]=Q}}},e.prototype._singleTransform2=function(t,r,s){const e=this._out,i=this._data,o=i[r],n=i[r+1],a=i[r+s],h=i[r+s+1],l=o+a,f=n+h,u=o-a,c=n-h;e[t]=l,e[t+1]=f,e[t+2]=u,e[t+3]=c},e.prototype._singleTransform4=function(t,r,s){const e=this._out,i=this._data,o=this._inv?-1:1,n=2*s,a=3*s,h=i[r],l=i[r+1],f=i[r+s],u=i[r+s+1],c=i[r+n],_=i[r+n+1],p=i[r+a],d=i[r+a+1],v=h+c,m=l+_,b=h-c,w=l-_,y=f+p,g=u+d,z=o*(f-p),A=o*(u-d),M=v+y,T=m+g,x=b+A,E=w-z,P=v-y,R=m-g,k=b-A,F=w+z;e[t]=M,e[t+1]=T,e[t+2]=x,e[t+3]=E,e[t+4]=P,e[t+5]=R,e[t+6]=k,e[t+7]=F},e.prototype._realTransform4=function(){var t,r,s=this._out,e=this._csize,i=1<<this._width,o=e/i<<1,n=this._bitrev;if(4===o)for(t=0,r=0;t<e;t+=o,r++){const s=n[r];this._singleRealTransform2(t,s>>>1,i>>>1)}else for(t=0,r=0;t<e;t+=o,r++){const s=n[r];this._singleRealTransform4(t,s>>>1,i>>>1)}var a=this._inv?-1:1,h=this.table;for(i>>=2;i>=2;i>>=2){var l=(o=e/i<<1)>>>1,f=l>>>1,u=f>>>1;for(t=0;t<e;t+=o)for(var c=0,_=0;c<=u;c+=2,_+=i){var p=t+c,d=p+f,v=d+f,m=v+f,b=s[p],w=s[p+1],y=s[d],g=s[d+1],z=s[v],A=s[v+1],M=s[m],T=s[m+1],x=b,E=w,P=h[_],R=a*h[_+1],k=y*P-g*R,F=y*R+g*P,S=h[2*_],C=a*h[2*_+1],I=z*S-A*C,O=z*C+A*S,B=h[3*_],W=a*h[3*_+1],j=M*B-T*W,L=M*W+T*B,q=x+I,D=E+O,G=x-I,H=E-O,J=k+j,K=F+L,N=a*(k-j),Q=a*(F-L),U=q+J,V=D+K,X=G+Q,Y=H-N;if(s[p]=U,s[p+1]=V,s[d]=X,s[d+1]=Y,0!==c){if(c!==u){var Z=G+-a*Q,$=-H+-a*N,tt=q+-a*J,rt=-D- -a*K,st=t+f-c,et=t+l-c;s[st]=Z,s[st+1]=$,s[et]=tt,s[et+1]=rt}}else{var it=q-J,ot=D-K;s[v]=it,s[v+1]=ot}}}},e.prototype._singleRealTransform2=function(t,r,s){const e=this._out,i=this._data,o=i[r],n=i[r+s],a=o+n,h=o-n;e[t]=a,e[t+1]=0,e[t+2]=h,e[t+3]=0},e.prototype._singleRealTransform4=function(t,r,s){const e=this._out,i=this._data,o=this._inv?-1:1,n=2*s,a=3*s,h=i[r],l=i[r+s],f=i[r+n],u=i[r+a],c=h+f,_=h-f,p=l+u,d=o*(l-u),v=c+p,m=_,b=-d,w=c-p,y=_,g=d;e[t]=v,e[t+1]=0,e[t+2]=m,e[t+3]=b,e[t+4]=w,e[t+5]=0,e[t+6]=y,e[t+7]=g};var o=s(i);function n({fMin:t,fMax:r,windowSize:s,windowOffset:e,threshold:i,onPitchAvailable:n}){const a=Math.trunc(sampleRate/r),h=Math.trunc(sampleRate/t);new o(4096);const l=new Float32Array(s+e),f=new Float32Array(h),u=new Float32Array(h);let c=0;return t=>{if(l[c]=t,++c>=s+e){l.copyWithin(0,e),c=s,console.time("yin");const t=(()=>{let t,r,e,o,n=0;for(t=1;t<h;++t)for(f[t]=0,r=s-t,e=0;e<r;++e)o=l[e]-l[e+t],f[t]+=o*o;for(e=1;e<h;++e)n+=f[e],u[e]=f[e]*e/n;for(u[0]=1,t=a;t<h;++t)if(u[t]<i){for(;t+1<h&&u[t+1]<u[t];)++t;return sampleRate/t}return 0})();console.timeEnd("yin"),t>0&&n(t)}}}registerProcessor("listener",r.create((r=>[n({fMin:50,fMax:2500,windowSize:4096,windowOffset:1024,threshold:.3,onPitchAvailable(t){r.postMessage({kind:"pitch",value:t})}}),t({binsPerSecond:16,onBinAvailable(t){r.postMessage({kind:"bin",value:t})}})])));
